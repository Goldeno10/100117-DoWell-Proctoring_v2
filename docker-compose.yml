version: '3.8'

services:
  zookeeper:
    image: 'zookeeper'
    ports:
      - '2181:2181'
  kafka:
    image: 'confluentinc/cp-kafka'
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_HOST}:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  backend:
    build:
      context: ./backend 
      dockerfile: Dockerfile  
    container_name: proctoring-backend
    restart: always
    ports:
      - "8005:8005"  
    networks:
      - webnet
    env_file:
      - ./backend/.env  
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - kafka
      - peerjs

  frontend:
    build:
      context: ./frontend  
      dockerfile: Dockerfile
    ports:
      - "5173:5173" 
    container_name: proctoring_frontend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - webnet
    depends_on:
      - backend

  peerjs:
    image: node:20-alpine
    ports:
      - "9000:9000"
    command: sh -c "npm install -g peer && peerjs --port 9000 --key peerjs --path /myapp"
    networks:
      - webnet

networks:
  webnet:
    driver: bridge