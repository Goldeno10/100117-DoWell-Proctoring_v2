version: "3.8"

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    container_name: dowell-proctoring-zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    container_name: dowell-proctoring-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dowell-proctoring-backend
    restart: always
    ports:
      - "5000:5000"
    expose:
      - "5000"
    volumes:
      - ./backend:/usr/src/app
    env_file:
      - ./backend/.env
    networks:
      - webnet
    command: ["npm", "run", "dev"]
    depends_on:
      - kafka


  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dowell-proctoring-frontend
    restart: always
    ports:
      - "4173:4173"
    expose:
      - "4173"
    networks:
      - webnet
    command: ["npm", "run", "dev"]
    

  peerjs:
    build:
      context: .
      dockerfile: Dockerfile.peerjs
    container_name: dowell-proctoring-peerjs
    ports:
      - "9000:9000"
    networks:
      - webnet

networks:
    webnet: {}

volumes:
  backend: {}
